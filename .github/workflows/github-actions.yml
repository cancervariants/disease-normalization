name: github-actions
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.DUMMY_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DUMMY_AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-2
      AWS_DEFAULT_OUTPUT: text
      DISEASE_NORM_DB_URL: ${{ matrix.db_url }}
      DISEASE_TEST: true
    strategy:
      matrix:
        db_url: ["http://localhost:8002", "postgres://postgres:postgres@localhost:5432/disease_normalizer_test"]
        python-version: ['3.8', '3.9', '3.10']
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_DB: 'disease_normalizer_test'
          POSTGRES_PASSWORD: 'postgres'
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: python3 -m pip install ".[dev,test]"

    - name: Build local DynamoDB server
      if: ${{ env.DISEASE_NORM_DB_URL == 'http://localhost:8002' }}
      run: |
          chmod +x ./tests/scripts/dynamodb_run.sh
          ./tests/scripts/dynamodb_run.sh

    - name: Run tests
      run: python3 -m pytest

  lint:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.DUMMY_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DUMMY_AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-2
      AWS_DEFAULT_OUTPUT: text
    steps:
    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: python3 -m pip install ".[dev]"

    - name: check style
      run: python3 -m flake8
