[project]
name = "disease-normalizer"
authors = [
    {name = "Alex Wagner"},
    {name = "Kori Kuzma"},
    {name = "James Stevenson"}
]
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: FastAPI",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 1",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
description = "VICC normalization routines for diseases"
license = {file = "LICENSE"}
dependencies = [
    "pydantic",
    "fastapi>=0.72.0",
    "uvicorn",
    "click",
    "boto3",
    "ga4gh.vrsatile.pydantic~=0.0.12",
]
dynamic = ["version"]

[project.optional-dependencies]
etl = [
    "owlready2==0.40",
    "rdflib",
    "requests",
    "typing-extensions",
    "bioversions"
]
dev = [
    "pre-commit",
    "lxml",
    "xmlformatter",
    "black",
    "ruff"
]
pg = ["psycopg[binary]"]
test = ["pytest", "pytest-cov"]

[project.urls]
Homepage = "https://github.com/cancervariants/disease-normalization"
Changelog = "https://github.com/cancervariants/disease-normalization/releases"
Source = "https://github.com/cancervariants/disease-normalization"
"Bug Tracker" = "https://github.com/cancervariants/disease-normalization/issues"

[project.scripts]
disease_norm_update = "disease.cli:update_normalizer_db"
disease_norm_update_remote = "disease.cli:update_from_remote"
disease_norm_dump = "disease.cli:dump_database"
disease_norm_check_db = "disease.cli:check_db"

[tool.setuptools.dynamic]
version = {attr = "disease.version.__version__"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"disease.database.postgresql" = ["*.sql"]

[tool.pytest.ini_options]
addopts = "--cov=src --cov-report term-missing"
testpaths = ["tests"]

[tool.coverage.run]
branch = true

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88

[tool.ruff]
src = ["src"]
# pycodestyle (E, W)
# Pyflakes (F)
# flake8-annotations (ANN)
# flake8-quotes (Q)
# pydocstyle (D)
# pep8-naming (N)
# isort (I)
select = ["E", "W", "F", "ANN", "Q", "D", "N", "I"]

fixable = ["I", "F401"]

# D205 - blank-line-after-summary
# D400 - ends-in-period
# D415 - ends-in-punctuation
# ANN101 - missing-type-self
# ANN003 - missing-type-kwargs
# E501 - line-too-long
ignore = ["D205", "D400", "D415", "ANN101", "ANN003", "E501"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.per-file-ignores]
# ANN001 - missing-type-function-argument
# ANN2 - missing-return-type
# ANN102 - missing-type-cls
# N805 - invalid-first-argument-name-for-method
# F821 - undefined-name
# F401 - unused-import
"tests/*" = ["ANN001", "ANN2", "ANN102"]
"*__init__.py" = ["F401"]
"disease/schemas.py" = ["ANN201", "N805", "ANN001"]
